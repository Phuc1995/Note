-Hien thi image:    
                + docker images
-Dowload image ve local:
                + docker pull <nmae_image:tag> ((phần :tag là options, nếu để trống  thì mặc định download bản latest ))
-Run docker:
                + docker run –name <tên_container> -v <thư mục trên máy tính>:<thư mục trong container> -p<port_máy tính>:<port_container>  <image name> bash
                    example:  docker run –name  eva_nginx  -p 80:80 -d nginx
                                -docker run : lệnh chạy của docker
                                –name: đặt tên cho container ở đây là  eva_nginx . Name này là duy nhất, không thể tạo trùng, nếu không đặt thì docker tự genate.
                                -p mở port container ra ngoài IP public  192.168.99.100
                                -d bật chế độ chạy background
                                nginx: tên images
-Liệt kê các container:
                + docker ps -a (liệt kê tất cả các container)
                + docker ps  ( chỉ liệt kê các container đang chạy background)
-Dung cac container dang chay:
                + docker stop <container_id hoặc name_container>
                + docker stop $(docker ps –a –q) (Dừng tất cả các docker đang dùng)
-Khoi dong lai docker :
                + docker start <container_id hoặc name_container>
-Truy cap vao 1 container dang chay:
                + docker exec -it <container_id hoặc name_container> bash
-Export ban container: 
                + docker export <container_id hoặc name_container> | gzip > file_export.tar.gz
-Import container => image:
                + zcat file_export.tar.gz | docker <new_name_image>Sau khi chạy xong. Chạy lệnh docker images để kiểm tra lại trong danh sách list images.
=====================================================================================================================================================
docker run -ti ubuntu:latest bash
create file in images: touch nane_file
docker ps -a : check container was stop 
docker ps -l : check container last near
STATUS Exited: (search docker.com document )
    + 0: successfull
    + 130 : ctrt C or ctrt D 
    + 125 : docker branch error
    + 126 : comnad not run
=================================================================================================================================
docker run -ti --rm ubuntu sleep 3: ko luu lai container khi dung, container se tu dong xoa sau 3s
docker run -ti ubuntu bash -c "sleep 3, echo job finished" : hien thong bao ra man hinh
docker run -ti -d ubuntu : -d chay ngam
docker attach ten.image: Truy cap contain dang chay thong qua ID hoac ten
                        + Truy cap vao cung mot container tu nhieu noi tai cung mot thoi diem
                        + Ctrl-P/ Ctrl-Q de ra khoi container va de tien trinh van dang chay
Docker exec:  khoi tao mot process khac ben trong container da co
            + Tien loi cho viec debug va quan ly databse
            + Khong the them port, volume, ..
docker exec -ti ten.image bash: vao image (se luu lai tai container)
Docker create : tao mot container voi cac config tuong tu docker run
              + Contaniner khong duoc chay ngay tu dau
              + Dung lenh docker start de chya container
docker restart id.container    
docker inspect : Kiem tra thiet lap cua Docker
               + docker inspect id.container | grep "key need find"
docker logs name.container              
docker kill [option] container: dung container
docker run --memory <total-memory-limit> <image> <command> : limit memory
docker run --cpu-shares = <limit><image><command> : gioi han tuong doi
docker run --cpu-period=<period-limit>
               
               
               